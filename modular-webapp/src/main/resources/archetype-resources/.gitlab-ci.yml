#image: ubuntu
image: maven:latest

before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  ##
  ## Use ssh-keyscan to scan the keys of your private server. Replace gitlab.com
  ## with your own domain name. You can copy and repeat that command if you have
  ## more than one server to connect to.
  ##
  - ssh-keyscan 104.248.134.156 >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  #- apt install -y openjdk-8-jdk openjdk-8-jre

stages:
  - deploy

deploy:
  only:
    - master
  stage: deploy
  script:
    - mvn package
    - scp ${artifactId}-server/target/${artifactId}-server-${version}.war root@104.248.134.156:/root/dist
    - scp Dockerfile root@104.248.134.156:/root/dist
    - scp server.sh root@104.248.134.156:/root/dist
    - ssh root@104.248.134.156 'cd dist && chmod +x server.sh && ./server.sh run'
